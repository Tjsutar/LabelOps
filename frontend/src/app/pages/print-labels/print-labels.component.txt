import { Component } from "@angular/core";
import { CommonModule } from "@angular/common";
import { HttpClient, HttpHeaders } from "@angular/common/http";
import { FormsModule } from "@angular/forms";

@Component({
  selector: "app-print-label",
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: "./print-labels.html",
})
export class PrintLabelsComponent {
  pathOption: string = "default";
  customPath: string = "";
  jsonData: any = null;
  responseMessage = "";

  constructor(private http: HttpClient) {}

  onFileSelected(event: Event) {
    const file = (event.target as HTMLInputElement)?.files?.[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = () => {
      try {
        this.jsonData = JSON.parse(reader.result as string);
        this.responseMessage = "✅ JSON data loaded successfully";
      } catch (err) {
        this.responseMessage = "❌ Invalid JSON file";
      }
    };
    reader.readAsText(file);
  }

  // uploadJson() {
  //   const token = localStorage.getItem("token");
  //   if (!token) {
  //     this.responseMessage = "No auth token found";
  //     return;
  //   }

  //   const headers = new HttpHeaders({
  //     Authorization: `Bearer ${token}`,
  //     "Content-Type": "application/json",
  //   });

  //   this.http
  //     .post("http://localhost:8080/api/v1/labels/batch", this.jsonData, {
  //       headers,
  //     })
  //     .subscribe({
  //       next: () => (this.responseMessage = "✅ Labels printed successfully!"),
  //       error: (err) => {
  //         console.error(err);
  //         this.responseMessage = "❌ Submission failed";
  //       },
  //     });
  // }

  uploadJson() {
    const token = localStorage.getItem("token");
    if (!token) {
      this.responseMessage = "No auth token found";
      return;
    }
  
    const headers = new HttpHeaders({
      Authorization: `Bearer ${token}`,
      "Content-Type": "application/json",
    });
  
    const payload = {
      data: this.jsonData, // the JSON file content
      path: this.pathOption === "custom" ? this.customPath : null
    };
  
    this.http
      .post("http://localhost:8080/api/v1/labels/batch", payload, { headers })
      .subscribe({
        next: () => (this.responseMessage = "✅ Labels printed successfully!"),
        error: (err) => {
          console.error(err);
          this.responseMessage = "❌ Submission failed";
        },
      });
  }
  

}
